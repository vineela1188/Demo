<<<<<<< HEAD
name: build-and-deploy
on : 
   push: 
     branches:
       - main
jobs: 
 build-and-deploy-backend:
  runs-on: ubuntu-latest
  steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 21
    - name: Build with Maven
      run: |
        cd backend
        mvn clean package -DskipTests
    - name: Log in to ACR
      uses: azure/docker-login@v1
      with:
        login-server: actioncr.azurecr.io
        username: '${{ secrets.REGISTRY_USERNAME }}'
        password: '${{ secrets.REGISTRY_PASSWORD }}'
    - name: Build and push image
      run: |
        IMAGE=actioncr.azurecr.io/demo-backend:${{ github.sha }}
        docker build -t $IMAGE ./backend
        docker push $IMAGE
      env:
       DOCKER_BUILDKIT: 1
    - name: Set image name output
      id: image
      run: >-
        echo "IMAGE=actioncr.azurecr.io/demo-backend:${{ github.sha }}" >>
        $GITHUB_OUTPUT
        
    - name: Azure Login 
      uses: azure/login@v1
      with:
         creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Get AKS credentials
      uses: azure/aks-set-context@v3
      with:
        cluster-name: demo-cluster
        resource-group: myTestRG
        subscription: 8bb16e0a-cdc0-4042-b7a8-b15fffff7846
    - name: Deploy to AKS
      env:
        IMAGE: ${{ steps.image.outputs.IMAGE }}
      run: |
        envsubst < K8s/deployment.yaml > rendered.yaml 
        echo "rendered manifest:"
        cat rendered.yaml
        kubectl apply -f rendered.yaml
        kubectl rollout status deployment/demo-backend-deployment
    
    
=======
name: Build & Push Backend
on:
 push:
   branches:
     - main
   paths:
     - "backend/**"
 workflow_dispatch:  # allow manual run
jobs:
 build-backend-windows:
   runs-on: windows-latest
   steps:
     - name: Checkout repository
       uses: actions/checkout@v4
     - name: Set up JDK 21
       uses: actions/setup-java@v4
       with:
         distribution: 'temurin'
         java-version: '21'
     - name: Build backend with Maven
       working-directory: backend
       run: mvn clean package -DskipTests
     - name: Log in to Docker Hub
       uses: docker/login-action@v2
       with:
         username: ${{ secrets.DOCKERHUB_USERNAME }}
         password: ${{ secrets.DOCKERHUB_TOKEN }}
     - name: Build Docker image
       # On windows runners PowerShell is default; docker commands are the same.
       working-directory: backend
       run: |
         # define image name + tag
         IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/my-backend-app
         IMAGE_TAG=latest
         docker build -t $IMAGE_NAME:$IMAGE_TAG .
     - name: Push Docker image
       run: |
         IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/my-backend-app
         IMAGE_TAG=latest
         docker push $IMAGE_NAME:$IMAGE_TAG
     - name: Print image tags
       run: |
         echo "âœ… Image pushed successfully!"
         echo "${{ secrets.DOCKERHUB_USERNAME }}/backend:latest"
         echo "${{ secrets.DOCKERHUB_USERNAME }}/backend:${{ github.sha }}"
     - name: Ensure kubectl present
       uses: azure/setup-kubectl@v3
       with:
         version: 'latest'
     - name: Use minikube context
       run: |
         echo "Minikube status:"
         minikube status || true
         kubectl config use-context minikube || true
         kubectl get nodes -o wide
>>>>>>> 0a3c7d6a69ea58a026d85b9399eaa8757c88ab7b
