name: Build & Push Backend
on:
 push:
   branches:
     - main
   paths:
     - "backend/**"   # trigger only if backend folder changes
 workflow_dispatch:   # allow manual run
jobs:
 build-backend:
   runs-on: ubuntu-latest
   steps:
     # 1. Checkout code
     - name: Checkout repository
       uses: actions/checkout@v3
     # 2. Setup JDK 21 (since your backend uses JDK 21)
     - name: Set up JDK 21
       uses: actions/setup-java@v3
       with:
         distribution: 'temurin'
         java-version: '21'
     # 3. Build backend with Maven
     - name: Build backend with Maven
       working-directory: backend
       run: mvn clean package -DskipTest
uses: azure/docker-login@v1
with:
login-server: actioncr.azurecr.io
username: ${{ secrets.REGISTRY_USERNAME }}
password: ${{ secrets.REGISTRY_PASSWORD }}

- name: Build and push image
run: |
IMAGE=actioncr.azurecr.io/demo-backend:${{ github.sha }}
docker build -t $IMAGE ./backend
docker push $IMAGE
env:
DOCKER_BUILDKIT: 1
- name: Set image name output
id: image
run: echo "IMAGE=actioncr.azurecr.io/demo-backend:${{ github.sha }}" >> $GITHUB_OUTPUT

- name: Login to Azure (service principal)
uses: azure/login@v1
with:
creds: ${{ secrets.AZURE_CREDENTIALS }} # JSON clientId, clientSecret, tenantId, subscriptionId

- name: Get AKS credentials
uses: azure/aks-set-context@v3
with:
creds: ${{ secrets.AZURE_CREDENTIALS }}
cluster-name: demo-cluster
resource-group: mytestrg

- name: Update k8s image and apply manifests
env:
IMAGE: actioncr.azurecr.io/demo-backend:${{ github.sha }}
run: |
# optionally replace image in deployment file (simple sed replace)
sed -i "s|actioncr.azurecr.io/demo-backend:.*|$IMAGE|g" k8s/deployment.yaml
kubectl apply -f k8s/ -n default

       
