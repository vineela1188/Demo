name: build-and-push
on:
 push:
   branches: [ main ]
 pull_request:
   branches: [ main ]
jobs:
 build:
   runs-on: self-hosted
   steps:
     - name: Checkout repository
       uses: actions/checkout@v4
     - name: Set up JDK 21
       uses: actions/setup-java@v4
       with:
         distribution: 'temurin'
         java-version: '21'
     - name: Build with Maven
       run: mvn clean verify -DskipTests
     - name: SonarCloud Scan
       run: |
         mvn -B clean verify sonar:sonar -DskipTests \
           -Dsonar.projectKey=vineela1188_Backend \
           -Dsonar.organization=vineela1188 \
           -Dsonar.host.url=https://sonarcloud.io \
           -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
           -Dsonar.branch.name=main
           
     - name: Verify JAR build
       run: ls -l target/*.jar
     - name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v3
     - name: Log in to Docker Hub
       uses: docker/login-action@v3
       with:
         username: ${{ secrets.DOCKERHUB_USERNAME }}
         password: ${{ secrets.DOCKERHUB_TOKEN }}
     - name: Build and Push Docker Image
       uses: docker/build-push-action@v5
       with:
         context: .
         file: ./Dockerfile
         push: true
         tags: |
           ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest
           ${{ secrets.DOCKERHUB_USERNAME }}/backend:${{ github.sha }}
         # Removed cache lines since docker driver doesn't support cache export
         load: false
     - name: Print image tags
       run: |
         echo "âœ… Image pushed successfully!"
         echo "${{ secrets.DOCKERHUB_USERNAME }}/backend:latest"
         echo "${{ secrets.DOCKERHUB_USERNAME }}/backend:${{ github.sha }}"
     - name: Ensure kubectl present
       uses: azure/setup-kubectl@v3
       with:
         version: 'latest'
     - name: Use minikube context
       run: |
         echo "Minikube status:"
         minikube status || true
         kubectl config use-context minikube || true
         kubectl get nodes -o wide
     - name: Deploy to Minikube (apply manifests)
       env:
         IMAGE_TAG: ${{ secrets.DOCKERHUB_USERNAME }}/backend:${{ github.sha }}
       run: |
         echo "Applying k8s manifests..."
         kubectl apply -f k8s/deployment.yaml
         kubectl apply -f k8s/service.yaml
         echo "updating deployment image"
         # update image to the new tag (works whether manifest contained placeholder or previous image)
         kubectl set image deployment/backend-deployment backend=${IMAGE_TAG} --record
         echo "waiting for rollout to complete"
         kubectl rollout status deployment/backend-deployment --timeout=300s
         kubectl get pods -o wide
        
     - name: Verify app (simple pod/service check)
       run: |
         echo "verifying that backend-service is accessible"
         kubectl get svc backend-service
         kubectl get pods -o wide
