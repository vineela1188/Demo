name: Build and Deploy Backend

on:
 push:
 branches: [ main ]

jobs:
 build-deploy-backend:
 runs-on: ubuntu-latest

 steps:
 # 1. Checkout code
 - name: Checkout repository
 uses: actions/checkout@v3

 # 2. Setup JDK 21
 - name: Set up JDK 21
 uses: actions/setup-java@v3
 with:
 distribution: temurin
 java-version: '21'

 # 3. Build backend with Maven
 - name: Build backend with Maven
 working-directory: backend
 run: mvn clean package -DskipTests

 # 4. Log in to Azure Container Registry
 - name: Log in to Azure Container Registry
 uses: azure/docker-login@v1
 with:
 login-server: actioncr.azurecr.io # <-- replace with your ACR name
 username: ${{ secrets.REGISTRY_USERNAME }}
 password: ${{ secrets.REGISTRY_PASSWORD }}

 # 5. Build and push Docker image
 - name: Build & Push Docker image
 run: |
 IMAGE_NAME=actioncr.azurecr.io/demo-backend:${{ github.sha }}
 docker build -t $IMAGE_NAME ./backend
 docker push $IMAGE_NAME
 echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

 # 6. Login to Azure using Service Principal (AKS credentials)
 - name: Azure Login
 uses: azure/login@v1
 with:
 creds: ${{ secrets.AZURE_CREDENTIALS }}

 # 7. Get AKS credentials
 - name: Set AKS context
 uses: azure/aks-set-context@v3
 with:
 creds: ${{ secrets.AZURE_CREDENTIALS }}
 cluster-name: my-aks-cluster # <-- replace with your cluster name
 resource-group: my-test-rg # <-- replace with your resource group

 # 8. Deploy to AKS
 - name: Update k8s manifests and apply
 run: |
 sed -i "s|actioncr.azurecr.io/demo-backend:.*|${IMAGE_NAME}|g" k8s/deployment.yaml
 kubectl apply -f k8s/ -n default
